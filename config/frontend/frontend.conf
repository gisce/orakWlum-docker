server {
    listen                  80;
    root                    /usr/share/nginx/html;

    index index.html index.htm;

    ## Frontend resource
    location @frontend {
        try_files $uri $uri/ /index.html;
    }

    ## API resource by port
#    location @api {
#        proxy_pass http://api:5000;
#        #proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
#        #proxy_redirect off;
#        proxy_read_timeout      30;
#        proxy_connect_timeout   30;
#        proxy_send_timeout      30;
#        send_timeout            30;
#
#        #add_header Access-Control-Allow-Origin "http://$HOST_NAME";
#        add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS";
#        add_header Access-Control-Allow-Headers: "Authorization, Origin, X-Requested-With, Content-Type, Accept";
#    }

#    ## API resource with extended timeout for huge cost operations
#    location @orakwlum-api-ht {
#        include uwsgi_params;
#        uwsgi_pass api:5000;
#        uwsgi_read_timeout      1200;
#        uwsgi_connect_timeout   1200;
#        uwsgi_send_timeout      1200;        
#
#        #add_header Access-Control-Allow-Origin "http://$HOST_NAME";
#        add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS";
#        add_header Access-Control-Allow-Headers: "Authorization, Origin, X-Requested-With, Content-Type, Accept";
#    }

    ## Static content (images, icons, txt)
    location ~ ^/(images|robots.txt|favicon.ico) {
        try_files /public/$uri =404;
        error_page 403 404 = @frontend;
        access_log off;
        expires max;
    }

    ## Handle CSS
    location ~ \.css {
        add_header Content-Type text/css;
        try_files $uri @frontend;
    }

    ## Handle SW without caching
    location ~* /dist/(sw\.js) {
        default_type application/x-javascript;
        add_header Content-Type application/x-javascript;

        expires -1; # immediately expire this file
        add_header Cache-Control "max-age=0, no-cache, no-store, must-revalidate";

        try_files $uri @frontend;
    }

    ## Handled at access layer
    ## /socket.io location for websocket communication
    #location /socket.io {
    #    proxy_http_version 1.1;
    #    proxy_buffering off;
    #    proxy_set_header Upgrade $http_upgrade;
    #    proxy_set_header Connection "Upgrade";
    #    try_files $uri @api;
    #}

#    # /api consumptions location
#    location /api/v1/consumptions { 
#        try_files $uri @orakwlum-api-ht;
#    }

#    ## /api location
#    location /api { try_files $uri @api; }

    ## / location
    location / { try_files $uri @frontend; }
}
